on:
  workflow_dispatch:
  release:
    types:
      - released


permissions:
  contents: write
  
name: Quarto Publish
jobs:
  build_and_copy:
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.find_release.outputs.VERSION }}
    steps:
      - name: find latest release
        id: find_release
        shell: bash
        run: |
          VERSION=$(curl \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -s https://api.github.com/repos/${{ github.repository }}/releases/latest \
          | jq .name -r)

          if [ "$VERSION" == "null" ]; then
            echo "No latest release found - stopping workflow."
            exit 1
          fi

          VERSION=${VERSION//./_}

          echo "Latest release found: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          # also set it to output
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Check out repository
        uses: actions/checkout@v4
        with:
          ref: main

      - name: create dummy version json
        run: |
          echo "[]" > content/v.json

      - name: replace variable tags
        run: |
          # replace _ to . in version
          VERSION=${{ env.VERSION }}
          VERSION=${VERSION//_/.}
          sed -i "s/{Version will be updated on release}/$VERSION/" content/_variables.yml

      - name: Set up Quarto
        uses: quarto-dev/quarto-actions/setup@v2

      - name: Install R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.2.0'

      - name: Install R Dependencies
        uses: r-lib/actions/setup-renv@v2
        with:
          cache-version: 1

      - name: Render Quarto Project
        uses: quarto-dev/quarto-actions/render@v2
        with:
          path: content/.
            
      - name: Upload to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4.0.0 
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs
          destination_dir: v/${{ env.VERSION }}
          keep_files: false
          full_commit_message: Deploy to GitHub Pages

  gh_pages_setup:
    runs-on: ubuntu-latest
    needs: build_and_copy
    env:
      VERSION: ${{ needs.build_and_copy.outputs.VERSION }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          ref: gh-pages

      - name: adjust version symlink
        run: |
          ln -sfn v/${{ env.VERSION }} latest

      - name: create version json file
        shell: bash
        run: |
          subfolders=$(find v -maxdepth 1 -mindepth 1 -type d -exec basename {} \; | sort)
          versions_json=$(printf '%s\n' "$subfolders" | jq -R . | jq -cs .)
          echo "$versions_json" > v.json

          for folder in v/*; do 
            if [ -d "$folder" ]; then
              cp v.json "$folder"/v.json
            fi
          done

      - name: create index.html
        run: |
          echo "<html><head><meta http-equiv='refresh' content='0; url=latest/' /></head></html>" > index.html

      - name: create CNAME file
        run: |
          cat "v/${{ env.VERSION }}/CNAME" > CNAME

      - name: Commit changes
        run: |
          git config --local user.email "${{ github.actor }}@users.noreply.github.com"
          git config --local user.name "${{ github.actor }}"
          git add -A
          git commit -m "Update latest to ${{ env.VERSION }}"
          git push
          
          